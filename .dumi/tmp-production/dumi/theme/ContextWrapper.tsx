// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import React, { useState, useEffect, useRef } from 'react';
import { useOutlet, history } from 'dumi';

import nprogress from '/Users/lvgx/Documents/workspace/packages/solo-form/node_modules/.pnpm/nprogress@0.2.0/node_modules/nprogress';
import './nprogress.css';

import { SiteContext } from '/Users/lvgx/Documents/workspace/packages/solo-form/node_modules/.pnpm/dumi@2.2.1_breuhdo4c5bnlrgomjyu3xiyu4/node_modules/dumi/dist/client/theme-api/context.js';
import { demos, components } from '../meta';
import { locales } from '../locales/config';

const entryExports = {
  
  
};

export default function DumiContextWrapper() {
  const outlet = useOutlet();
  const [loading, setLoading] = useState(true);
  const prev = useRef(history.location.pathname);

  useEffect(() => {
    return history.listen((next) => {
      if (next.location.pathname !== prev.current) {
        prev.current = next.location.pathname;

        // mark loading when route change, page component will set false when loaded
        setLoading(true);

        // start nprogress
        nprogress.start();

        // scroll to top when route changed
        document.documentElement.scrollTo(0, 0);
      }
    });
  }, []);

  return (
    <SiteContext.Provider value={{
      pkg: {"name":"solo-form","description":"一个简单实用的通过 JSONSchema 配置，依赖 ant design 实现 React 中后台 表单解决方案","version":"0.0.1","license":"MIT","authors":["lvgx"]},
      historyType: "browser",
      entryExports,
      demos,
      components,
      locales,
      loading,
      setLoading,
      hostname: undefined,
      themeConfig: {"title":"solo-form","footer":"Copyright © 2023 solo-form","prefersColor":{"default":"light","switch":true},"nprogress":true,"name":"solo-form","logo":"https://cdn.lvgx.cn/assets/solo-form.png","rtl":true,"nav":{"mode":"append","value":[{"title":"GitHub","link":"https://github.com/lvgx1128/solo-form"}]}},
      _2_level_nav_available: true,
    }}>
      {outlet}
    </SiteContext.Provider>
  );
}
